[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Executive Summary",
    "section": "",
    "text": "Poznań’s rental market has emerged as one of Poland’s most attractive investment destinations, driven by strong fundamentals including a growing student population, expanding tech sector, and strategic location in western Poland. With over 100,000 students and increasing numbers of young professionals, rental demand remains consistently high while supply struggles to keep pace.\nThe analysis was performed on May 25th and contains all available listings in Poznan region at that point of time."
  },
  {
    "objectID": "index.html#setup-and-data-loading",
    "href": "index.html#setup-and-data-loading",
    "title": "Executive Summary",
    "section": "Setup and Data Loading",
    "text": "Setup and Data Loading\n\n\nImport libraries and load data\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom highlight_text import ax_text, fig_text\nfrom drawarrow import ax_arrow, fig_arrow\nfrom pypalettes import load_cmap\nimport geopandas as gpd\nfrom pyfonts import load_font\nimport numpy as np\nimport ast\nimport seaborn as sns\n\nplt.rcParams['figure.dpi'] = 72          # Lower DPI to reduce file size\nplt.rcParams['savefig.dpi'] = 72         # Lower save DPI\nplt.rcParams['savefig.bbox'] = 'tight'   # Tight bounding box\n\n# Load custom fonts\npoppins_light = load_font(\"https://github.com/google/fonts/blob/main/ofl/poppins/Poppins-Light.ttf?raw=true\")\npoppins_bold = load_font(\"https://github.com/google/fonts/blob/main/ofl/poppins/Poppins-Bold.ttf?raw=true\")\n\n# Load color palettes\ncmap = load_cmap(\"Semicossyphus_pulcher\", reverse=True)\ncmap_unreversed = load_cmap(\"Semicossyphus_pulcher\", reverse=False)\ncmap_x85 = load_cmap(\"X85\", reverse=True)\n\n# Load and prepare data\ndf = pd.read_csv('data/listings_cleaned_data.csv')\ndf['Dzielnica'] = df['Dzielnica'].replace('Jeżyce', 'Jezyce')\n\nprint(f\"Total number of listings: {len(df):,}\")\n\n\nTotal number of listings: 1,366"
  },
  {
    "objectID": "index.html#market-overview",
    "href": "index.html#market-overview",
    "title": "Executive Summary",
    "section": "Market Overview",
    "text": "Market Overview\n\nKey Market Insights\nThese distributions reveal Poznań’s rental market is dominated by compact, affordable properties. The majority of apartments fall between 40-50 m², with corresponding rents clustered in the 2,000-3,000 PLN range. This tight correlation indicates a highly efficient market optimized for a specific demographic — likely students and young professionals who prioritize affordability and location over space.\nThe market has essentially standardized around a “sweet spot” of ~45 m² apartments at ~2,500 PLN monthly rent. Properties above 80 m² or 4,000 PLN represent a small niche segment, suggesting potential opportunities in the premium rental market remain underexplored.\n\n\nCreate market overview histograms\n# Filter extreme outliers\ntrimmed_df = df[df[\"Powierzchnia\"] &lt; 500]\n\nfig, axs = plt.subplots(ncols=2, figsize=(14, 7))\n\ndef style_histogram_axes(ax, xlabel, fontsize=9, tick_font=poppins_light):\n    \"\"\"Apply common styling to histogram axes\"\"\"\n    ax.set_xlabel(xlabel, fontsize=fontsize, font=poppins_light)\n    ax.spines[['top', 'right']].set_visible(False)\n    ax.tick_params(axis='both', labelsize=fontsize, length=0)\n    \n    if tick_font:\n        for tick in ax.get_xticklabels():\n            tick.set_font(tick_font)\n            tick.set_fontsize(fontsize)\n        for tick in ax.get_yticklabels():\n            tick.set_font(tick_font)\n            tick.set_fontsize(fontsize)\n\n# Common histogram parameters\nhist_params = {\n    'bins': 25,\n    'color': cmap(5),\n    'edgecolor': 'black'\n}\n\n# Chart 1: Distribution of area sizes\nax_text(\n    ax=axs[0], \n    x=85, y=250, \n    s=\"&lt;The most common&gt; area range is \\nbetween 40 and 50 m²\", \n    fontsize=14, \n    font=poppins_light,\n    highlight_textprops=[{\"color\": 'black', 'font': poppins_bold}]\n)\n\naxs[0].hist(trimmed_df[\"Powierzchnia\"].dropna(), **hist_params)\nstyle_histogram_axes(axs[0], \"Area (m²)\")\naxs[0].set_xlim(0, 250)\n\n# Custom x-axis labels\nlabels_old = [0, 50, 100, 150, 200, 250]\nlabels_new = [\"\", \"50\", \"100\", \"150\", \"200\", \"250\"]\naxs[0].set_xticks(labels_old, labels=labels_new)\n\nax_arrow([115, 260], [55, 325], ax=axs[0], color='black', radius=0.5)\n\n# Chart 2: Distribution of rent prices\nhist_params['bins'] = 30\naxs[1].hist(df[\"Czynsz najmu\"].dropna(), **hist_params)\nstyle_histogram_axes(axs[1], \"Price (PLN)\")\n\n# Custom x-axis labels for price chart\nlabels_old = [2000, 4000, 6000, 8000, 10000, 12000, 14000, 16000]\nlabels_new = ['2k', '4k', '6k', '8k', '10k', '12k', '14k', '16k']\naxs[1].set_xticks(labels_old, labels=labels_new)\n\nax_text(\n    ax=axs[1],\n    x=4000, y=352, \n    s=\"&lt;The most popular&gt; price range for \\nlistings in &lt;Poznań&gt; is &lt;2000-3000 PLN&gt;\", \n    fontsize=14, \n    color='black',\n    font=poppins_light,\n    highlight_textprops=[{'color': 'black', 'font': poppins_bold}] * 3\n)\n\nax_arrow([9000, 360], [3000, 460], ax=axs[1], color='black', radius=0.5)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nDistribution of apartment sizes and rental prices in Poznań"
  },
  {
    "objectID": "index.html#district-analysis",
    "href": "index.html#district-analysis",
    "title": "Executive Summary",
    "section": "District Analysis",
    "text": "District Analysis\n\nDistrict-Level Pricing Analysis\nStare Miasto emerges as the premium district with total monthly costs reaching 2,759 PLN, reflecting its desirability as Poznań’s historic center with proximity to major attractions and business districts. The variation across districts is relatively modest, with most areas falling within a 200 PLN range of each other.\nGrunwald leads in base rent costs despite having lower total expenses than Stare Miasto, suggesting more favorable administrative fee structures. Meanwhile, Nowe Miasto and Jeżyce offer the most affordable options at around 2,630-2,640 PLN total monthly cost, making them attractive for budget-conscious tenants.\n\n\nAnalyze district-level pricing\ndf_by_districts = df.groupby(\"Dzielnica\")[[\"Czynsz najmu\", \"Czynsz administracyjny\", \"Powierzchnia\"]].mean().sort_values(\"Czynsz najmu\", ascending=False).head(10)\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nax_text(\n    x=-0.5, y=5000,\n    size=20,\n    ax=ax,\n    s=\"&lt;Stare Miasto&gt; is the &lt;most expensive&gt; district in Poznań\",\n    color=\"black\",\n    font=poppins_light,\n    highlight_textprops=[\n        {\"font\": poppins_bold},\n        {\"color\": \"darkred\", \"font\": poppins_bold},\n    ]\n)\n\nax_text(\n    x=-0.5, y=4700,\n    size=14,\n    ax=ax,\n    s=\"An average sum of &lt;Rent&gt; and &lt;Administrative rent&gt;\",\n    color=\"black\",\n    font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(2), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold},\n    ]\n)\n\n# Create stacked bar chart\nax.bar(\n    df_by_districts.index, \n    df_by_districts[\"Czynsz najmu\"], \n    color=cmap(4),\n    edgecolor=cmap(4),\n    linewidth=1,\n    label=\"Base Rent\"\n)\n\nax.bar(\n    df_by_districts.index, \n    df_by_districts[\"Czynsz administracyjny\"], \n    color=cmap(1), \n    bottom=df_by_districts[\"Czynsz najmu\"],\n    edgecolor=cmap(1),\n    linewidth=1,\n    label=\"Administrative Rent\"\n)\n\n# Add total labels\ntotal_rent = df_by_districts[\"Czynsz najmu\"] + df_by_districts[\"Czynsz administracyjny\"]\nfor i, total in enumerate(total_rent):\n    label = f\"{total:,.0f}\"\n    ax.text(\n        x=i, y=total + 100, s=label, ha='center', va='bottom',\n        fontsize=10, color='black', font=poppins_light\n    )\n\nax.spines[:].set_visible(False)\nax.get_yaxis().set_visible(False)\nax.tick_params(axis='x', labelsize=10, length=0, rotation=0)\n\nfor tick in ax.get_xticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nAverage rental costs by district (rent + administrative fees)\n\n\n\n\n\n\nMarket Share by District\nStare Miasto captures nearly 30% of the rental market, establishing itself as the dominant supply hub in Poznań. This substantial market share, combined with Grunwald’s 26%, means these two districts control over half of all rental listings in the city.\n\n\nCreate market share visualization on map\n# Prepare aggregated data\nagg_df = df.groupby('Dzielnica').agg(\n    count=('Dzielnica', 'size'),\n    avg_total_rent=('Czynsz najmu', 'mean'),\n    avg_powierzchnia=('Powierzchnia', 'mean'),\n    avg_pokoje=('Liczba pokoi', 'mean'),\n    avg_kaucja=('Kaucja', 'mean'),\n    avg_pietro=('Budynek Piętro', 'mean')\n).reset_index()\n\n# Load geographic data and merge\npoznan = gpd.read_file('resources/poznan/dzielnice.shp')\nmerged_df = pd.merge(poznan, agg_df, left_on=\"Dzielnica\", right_on=\"Dzielnica\", how=\"left\")\n\nlegend_settings = {\n    'shrink': 0.5,\n    'orientation': \"vertical\",\n    'aspect': 10,\n    'pad': 0.1,\n}\n\nfig, ax = plt.subplots(figsize=(12, 10))\n\nmerged_df.plot(\n    column='count', ax=ax, legend=True, cmap=cmap, \n    legend_kwds=legend_settings\n)\n\nfig_text(\n    x=0.15, y=0.95,\n    s=\"&lt;Stare Miasto&gt; &lt;leads&gt; Poznań's rental market\",\n    size=23,\n    font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": \"darkred\", \"font\": poppins_bold},\n    ],\n)\n\nfig_text(\n    x=0.15, y=0.9,\n    s=\"with &lt;29%&gt; of all available listings, but &lt;Grunwald&gt; follows closely behind\",\n    size=14,\n    font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold},\n    ],\n)\n\n# Add district labels and percentages\nfor idx, row in merged_df.iterrows():\n    if pd.notna(row['count']):\n        font_color = \"white\" if row['count'] &gt; 250 else \"black\"\n        point = row.geometry.representative_point()\n        \n        ax_text(\n            point.x+0.004, point.y, \n            f\"{str(row['Dzielnica'])}\", \n            fontsize=8, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n        \n        ax_text(\n            point.x+0.005, point.y+0.01, \n            f\"{(row['count'] / len(df) * 100):.0f}%\", \n            fontsize=10, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n\nfig_text(\n    x=0.15, y=0.05,\n    s=\"&lt;Note:&gt; The results were rounded to the nearest whole number. Due to this, the sum of all values may not equal 100%\", \n    fontsize=9, font=poppins_light,\n    highlight_textprops=[{\"color\": 'black','font': poppins_bold}]\n)\n\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nGeographic distribution of rental listings across Poznań districts"
  },
  {
    "objectID": "index.html#property-characteristics",
    "href": "index.html#property-characteristics",
    "title": "Executive Summary",
    "section": "Property Characteristics",
    "text": "Property Characteristics\n\nRoom Configuration Preferences\nTwo-room apartments dominate Poznań’s rental market with an overwhelming 53% market share, confirming the city’s orientation toward compact living solutions. This preference aligns perfectly with the earlier findings about apartment sizes clustering around 40-50 m².\n\n\nAnalyze room configuration preferences\ndf_rooms = df.groupby(\"Liczba pokoi\").size() / len(df) * 100\ndf_rooms = df_rooms.round(0).astype(int)\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\nax_text(\n    ax=ax, x=3, y=40, \n    s=\"&lt;Two-room apartments&gt; &lt;dominate&gt; \\nwith &lt;53%&gt; of Poznań's rental market\", \n    font=poppins_light, fontsize=18, \n    highlight_textprops=[\n        {\"color\": 'black','font': poppins_bold},\n        {\"color\": 'darkred','font': poppins_bold},\n        {\"color\": 'black','font': poppins_bold},\n    ]\n)\n\n# Add percentage labels on bars\nfor i in range(len(df_rooms)):\n    if df_rooms.values[i] &gt; 0:\n        ax_text(\n            ax=ax, x=i+1, y=df_rooms.values[i]+ 2, \n            s=f\"{df_rooms.values[i]:,}%\", \n            fontsize=10, color='black', font=poppins_light, ha='center'\n        )\n\nax.bar(\n    df_rooms.index, df_rooms.values, \n    color=cmap(4), edgecolor=cmap(3), linewidth=1\n)\n\nax.spines[[\"top\", \"left\", \"right\"]].set_visible(False)\nax.get_yaxis().set_visible(False)\nax.tick_params(axis='both', labelsize=10, length=0, pad=10)\n\nfor tick in ax.get_xticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(12)\n\nax_text(\n    ax=ax, x=0.6, y=-7, \n    s=\"&lt;Note:&gt; The results were rounded to the nearest whole number. Due to this, the sum of all values may not equal 100%\", \n    fontsize=9, font=poppins_light,\n    highlight_textprops=[{\"color\": 'black','font': poppins_bold}]\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nDistribution of apartments by number of rooms\n\n\n\n\n\n\nGeographic Premium Analysis\nGrunwald establishes itself as Poznań’s premium rental district, commanding both the highest deposits (6,105 PLN) and offering the largest average apartment sizes (69 m²). This 69% size advantage over the smallest units demonstrates clear market segmentation between premium and standard offerings.\n\n\nShow code\n# First Chart - Deposits by District\n#| label: deposits-by-district\n#| fig-cap: \"Average deposit amounts by district\"\n#| code-summary: \"Deposits across Poznań districts\"\n\nlegend_settings = {\n    'shrink': 0.5, 'orientation': \"vertical\", 'aspect': 10, \n    'pad': 0.1, 'location': \"left\",\n}\n\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\nfig_text(\n    x=0.5, y=0.95,\n    s=\"Premium space comes at a cost: &lt;Grunwald&gt; leads in both &lt;apartment size&gt; and &lt;deposits&gt;\",\n    size=18, font=poppins_light, ha='center',\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold}\n    ]\n)\n\nmerged_df.plot(\n    column='avg_kaucja', ax=ax, legend=True, cmap=cmap, \n    legend_kwds=legend_settings\n)\n\nfor idx, row in merged_df.iterrows():\n    if pd.notna(row['avg_kaucja']):\n        font_color = \"white\" if row['avg_kaucja'] &gt; 5000 else \"black\"\n        point = row.geometry.representative_point()\n        \n        ax_text(\n            point.x+0.004, point.y, \n            f\"{str(row['Dzielnica'])}\", \n            fontsize=8, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n        ax_text(\n            point.x+0.007, point.y+0.01, \n            f\"{row['avg_kaucja']:,.0f} PLN\", \n            fontsize=10, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n# Second Chart - Apartment Sizes by District\n#| label: apartment-sizes-by-district\n#| fig-cap: \"Average apartment sizes by district\"\n#| code-summary: \"Apartment areas across Poznań districts\"\n\nlegend_settings = {\n    'shrink': 0.5, 'orientation': \"vertical\", 'aspect': 10, \n    'pad': 0.1, 'location': \"left\",\n}\n\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\nfig_text(\n    x=0.5, y=0.95,\n    s=\"Spacious living comes at a premium: &lt;Grunwald&gt; offers the largest &lt;apartments&gt;\",\n    size=18, font=poppins_light, ha='center',\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold},\n    ]\n)\n\nmerged_df.plot(\n    column='avg_powierzchnia', ax=ax, legend=True, cmap=cmap,\n    legend_kwds=legend_settings\n)\n\nfor idx, row in merged_df.iterrows():\n    if pd.notna(row['avg_powierzchnia']):\n        font_color = \"white\" if row['avg_powierzchnia'] &gt; 50 else \"black\"\n        point = row.geometry.representative_point()\n        \n        ax_text(\n            point.x+0.004, point.y, \n            f\"{str(row['Dzielnica'])}\", \n            fontsize=8, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n        ax_text(\n            point.x+0.007, point.y+0.01, \n            f\"{row['avg_powierzchnia']:,.0f} m²\", \n            fontsize=10, color=font_color, ha='center',\n            font=poppins_light, ax=ax\n        )\n\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSubdistrict Analysis\nBased on this subdistrict analysis, several key patterns emerge showing Market Segmentation is Clear: The chart reveals distinct pricing tiers across Poznań’s districts. Stare Miasto (Old Town) consistently commands premium prices, with most subdistricts clustering in the 2,500-4,500 PLN rent range and requiring deposits of 3,000-4,000 PLN.\n\n\nAnalyze subdistrict patterns\n# Group by both district and subdistrict\nsubdistrict_summary = df.groupby(['Dzielnica', 'Obszar w dzielnicy']).agg({\n    'Kaucja': 'mean',\n    'Czynsz najmu': 'mean',\n    'Powierzchnia': 'mean',\n    'Dzielnica': 'count'\n}).round(0)\n\nsubdistrict_summary.columns = ['avg_deposit', 'avg_rent', 'avg_size', 'listing_count']\nsubdistrict_summary = subdistrict_summary.reset_index()\n\nfig, ax = plt.subplots(figsize=(14, 9))\n\n# Create color mapping for districts\ndistricts = subdistrict_summary['Dzielnica'].unique()\ndistrict_colors = {district: cmap(i/(len(districts)-1)) for i, district in enumerate(districts)}\n\n# Create scatter plot for each district\nfor district in districts:\n    district_data = subdistrict_summary[subdistrict_summary['Dzielnica'] == district]\n    \n    ax.scatter(\n        x=district_data['avg_rent'],\n        y=district_data['avg_deposit'], \n        s=district_data['listing_count'] * 5,\n        color=[district_colors[district]] * len(district_data),\n        label=district,\n        edgecolors='black',\n        linewidth=0.8,\n        alpha=0.8\n    )\n\nax.set_xlabel('Average Rent Price (PLN)', fontsize=12, font=poppins_light)\nax.set_ylabel('Average Deposit Amount (PLN)', fontsize=12, font=poppins_light)\nax.spines[['top', 'right']].set_visible(False)\nax.grid(True, alpha=0.3, linestyle='--')\n\nfor tick in ax.get_xticklabels() + ax.get_yticklabels():\n    tick.set_font(poppins_light)\n\n# Create custom legend\nlegend_elements = []\nfor district, color in district_colors.items():\n    legend_elements.append(\n        plt.scatter([], [], color=color, s=100, label=district,\n            edgecolors='black', linewidth=0.8, alpha=0.8)\n    )\n\nlegend = ax.legend(\n    handles=legend_elements, labels=list(district_colors.keys()),\n    bbox_to_anchor=(1.02, 1), loc='upper left', \n    fontsize=10, frameon=False, markerscale=1\n)\n\nfor text in legend.get_texts():\n    text.set_font(poppins_light)\n\nfig_text(\n    x=0.13, y=0.98,\n    s=\"&lt;Subdistrict Analysis&gt;: Each district shows distinct pricing patterns\",\n    size=23, font=poppins_light,\n    highlight_textprops=[{\"color\": cmap(4), \"font\": poppins_bold}]\n)\n\nfig_text(\n    x=0.25, y=0,\n    s=\"&lt;Bubble size&gt; indicates market activity      &lt;Colors&gt; represent districts      &lt;Each point&gt; shows a subdistrict\",\n    size=9, font=poppins_light, color=\"black\",\n    highlight_textprops=[\n        {\"color\": 'black', 'font': poppins_bold},\n        {\"color\": 'black', 'font': poppins_bold},\n        {\"color\": 'black', 'font': poppins_bold}\n    ]\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nRent vs. deposit correlation across subdistricts (bubble size = market activity)"
  },
  {
    "objectID": "index.html#building-characteristics",
    "href": "index.html#building-characteristics",
    "title": "Executive Summary",
    "section": "Building Characteristics",
    "text": "Building Characteristics\n\nHistorical Construction Periods\nContemporary Buildings dominate Poznań’s Rental Market. The distribution of construction periods across districts reveals interesting patterns about the city’s development and rental stock composition.\n\n\nAnalyze building age distribution\ndef categorize_year(year):\n    if pd.isna(year):\n        return \"Unknown\"\n    elif year &lt; 1939:\n        return \"Pre-war\"\n    elif 1945 &lt;= year &lt;= 1970:\n        return \"Post-war Reconstruction\"\n    elif 1971 &lt;= year &lt;= 1989:\n        return \"Communist Era\"\n    elif 1990 &lt;= year &lt;= 2010:\n        return \"Modern Poland\"\n    elif year &gt;= 2011:\n        return \"Contemporary\"\n    else:\n        return \"War Period (1939-1944)\"\n\ndf['Year_Category'] = df['Rok budowy'].apply(categorize_year)\n\n# Calculate unknown percentage\ntotal_listings = len(df)\nunknown_count = len(df[df['Year_Category'] == 'Unknown'])\nunknown_percentage = round((unknown_count / total_listings * 100), 1)\n\n# Filter out unknown years\ndf_known = df[df['Year_Category'] != 'Unknown'].copy()\ndf_year_districts = df_known.groupby(['Dzielnica', 'Year_Category']).size().reset_index(name='Count')\n\n# Calculate percentages within each district\ndf_year_districts['Total_by_District'] = df_year_districts.groupby('Dzielnica')['Count'].transform('sum')\ndf_year_districts['Percentage'] = round((df_year_districts['Count'] / df_year_districts['Total_by_District'] * 100), 1)\n\n# Pivot for visualization\ndf_viz = df_year_districts.pivot(index='Dzielnica', columns='Year_Category', values='Percentage').fillna(0)\n\ncategory_order = ['Pre-war', 'Post-war Reconstruction', 'Communist Era', 'Modern Poland', 'Contemporary', 'War Period (1939-1944)']\ndf_viz = df_viz.reindex(columns=category_order, fill_value=0)\n\nfig, ax = plt.subplots(figsize=(14, 9))\n\nfor i in range(len(df_viz.columns)):\n    color = 'gray' if i == len(df_viz.columns) - 1 else cmap(i)\n    \n    ax.barh(\n        df_viz.index, \n        df_viz[df_viz.columns[i]], \n        left=df_viz.iloc[:, :i].sum(axis=1) if i &gt; 0 else 0, \n        color=color,\n        label=df_viz.columns[i]\n    )\n\n# Add labels for segments &gt; 5%\nfor i in range(len(df_viz.columns)):\n    for j in range(len(df_viz.index)):\n        value = df_viz.iloc[j, i]\n        \n        if value &gt; 5:\n            left_position = df_viz.iloc[j, :i].sum() if i &gt; 0 else 0\n            x_position = left_position + value / 2\n            \n            ax.text(\n                x_position, j, s=f\"{value:.0f}%\",\n                va='center', ha='center', fontsize=10, \n                color='white', font=poppins_light\n            )\n\nax.spines[[\"top\", \"right\", \"bottom\"]].set_visible(False)\nax.get_xaxis().set_visible(False)\nax.tick_params(axis='y', left=False)\n\nfor tick in ax.get_yticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nfig_text(\n    x=0.09, y=1.02,\n    s=\"&lt;Contemporary Buildings&gt; &lt;dominate&gt; Poznań's Rental Market\",\n    size=24, font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": \"darkred\", \"font\": poppins_bold}\n    ]\n)\n\nfig_text(\n    x=0.092, y=0.97,\n    s=\"Distribution of construction periods across districts\",\n    size=16, font=poppins_light,\n)\n\nUNKNOWN_NOTE = f\"Note: &lt;{unknown_percentage}%&gt; of listings did not specify construction year and were excluded. Percentages based on known dates only.\"\nfig_text(\n    x=0.1, y=0.005, s=UNKNOWN_NOTE, size=9, font=poppins_light,\n    highlight_textprops=[{\"color\": cmap(4), \"font\": poppins_bold}]\n)\n\n# Add period labels\nperiods = [\n    (\"Contemporary\\n(greater than 2011)\", 0.67, 0.87, cmap(4)),\n    (\"Modern Poland\\n(1990-2010)\", 0.35, 0.87, cmap(3)),\n    (\"Post-war\\n(1945-1970)\", 0.18, 0.87, cmap(1)),\n    (\"Pre-war\\n(before 1939)\", 0.1, 0.13, cmap(0)),\n    (\"Communist Era\\n(1971-1989)\", 0.22, 0.13, cmap(2))\n]\n\nfor text, x, y, color in periods:\n    fig_text(\n        x=x, y=y, s=f\"&lt;{text.split('(')[0].strip()}&gt;\\n&lt;{text.split('(')[1] if '(' in text else ''}&gt;\",\n        size=10, font=poppins_light, color=color,\n        highlight_textprops=[{\"font\": poppins_bold}, {\"size\": 8}]\n    )\n\nax.set_xlim(0, 105)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nDistribution of construction periods across districts\n\n\n\n\n\n\nFloor Level Impact\nRent remains consistent regardless of apartment floor level, suggesting that floor preference has minimal impact on pricing in Poznań’s market.\n\n\nAnalyze floor level impact on pricing\ndf_floor = df.dropna(subset=[\"Mieszkanie Piętro\", \"Czynsz najmu\"])\ndf_floor = df_floor[df_floor[\"Mieszkanie Piętro\"].apply(lambda x: str(x).isdigit())]\ndf_floor[\"Mieszkanie Piętro\"] = df_floor[\"Mieszkanie Piętro\"].astype(int)\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\nsns.boxplot(\n    x=\"Mieszkanie Piętro\", y=\"Czynsz najmu\", \n    hue=\"Mieszkanie Piętro\",\n    data=df_floor, \n    palette=cmap,\n    legend=False\n)\n\nfig_text(\n    x=0.1, y=1, \n    s=\"Rent Remains &lt;Consistent&gt; Regardless of Apartment Floor\", \n    fontsize=23, font=poppins_light,\n    highlight_textprops=[{\"color\": cmap(4), \"font\": poppins_bold}]\n)\n\nplt.xlabel(\"Floor Level\", fontsize=12, font=poppins_light)\nplt.ylabel(\"Monthly Rent (PLN)\", fontsize=12, font=poppins_light)\n\nax.spines[['top', 'right']].set_visible(False)\n\nfor tick in ax.get_xticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_yticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nRental price distribution by floor level"
  },
  {
    "objectID": "index.html#market-structure",
    "href": "index.html#market-structure",
    "title": "Executive Summary",
    "section": "Market Structure",
    "text": "Market Structure\n\nListing Source Analysis\nProfessional Agencies vastly outnumber Private Landlords in Poznań’s rental market, indicating a highly professionalized rental ecosystem.\n\n\nAnalyze market structure by listing source\nsource_counts = df[\"Typ ogłoszeniodawcy\"].value_counts()\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\nsource_counts.plot(kind='bar', color=[cmap(5), cmap(3), cmap(1)])\n\nfig_text(\n    x=0.35, y=0.9, \n    s=\"&lt;Professional Agencies&gt; \\nVastly Outnumber &lt;Private Landlords&gt;\", \n    fontsize=28, font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": \"darkred\", \"font\": poppins_bold},\n    ]\n)\n\nplt.ylabel(\"Number of Listings\", fontsize=12, font=poppins_light)\nax.set_xlabel(None)\nax.spines[['top', 'right']].set_visible(False)\n\nfor tick in ax.get_xticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_yticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nplt.xticks(rotation=0)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nDistribution of listing sources (agencies vs. private landlords)"
  },
  {
    "objectID": "index.html#cost-structure-analysis",
    "href": "index.html#cost-structure-analysis",
    "title": "Executive Summary",
    "section": "Cost Structure Analysis",
    "text": "Cost Structure Analysis\n\nHeating Infrastructure Impact\nHeating Infrastructure drives Administrative Cost Structure. Different heating systems significantly impact the administrative costs, with some heating types commanding premium charges.\n\n\nAnalyze heating infrastructure impact on costs\ndf_filtered = df.dropna(subset=[\"Czynsz administracyjny\", \"Ogrzewanie\"])\ndf_filtered = df_filtered[\n    (df_filtered[\"Czynsz administracyjny\"] &gt; 0) &\n    (df_filtered[\"Czynsz administracyjny\"] &lt; 10000)\n]\n\navg_admin_rent = (\n    df_filtered\n    .groupby(\"Ogrzewanie\")[\"Czynsz administracyjny\"]\n    .mean()\n    .sort_values(ascending=False)\n)\n\nfig, ax = plt.subplots(figsize=(14, 9))\n\nbars = ax.bar(\n    range(len(avg_admin_rent)), \n    avg_admin_rent.values,\n    color=[cmap_unreversed(i) for i in range(len(avg_admin_rent))]\n)\n\nfig_text(\n    x=0.44, y=0.9, \n    s=\"&lt;Heating Infrastructure&gt; \\nDrives Administrative Cost Structure\", \n    fontsize=23, font=poppins_light,\n    highlight_textprops=[{\"color\": cmap(4), \"font\": poppins_bold}]\n)\n\nax.set_xticks(range(len(avg_admin_rent)))\nax.set_xticklabels(avg_admin_rent.index, rotation=0, ha='center', fontsize=14, font=poppins_light)\n\n# Add value labels on bars\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2., height + 5,\n            f'{height:.0f}', ha='center', va='bottom', \n            fontsize=12, font=poppins_light, color='black')\n\nax.spines[[\"top\", \"right\", \"left\"]].set_visible(False)\nax.grid(axis='y', alpha=0.3, linestyle='-', linewidth=0.5)\nax.set_axisbelow(True)\nax.get_yaxis().set_visible(False)\n\nfor tick in ax.get_xticklabels():\n    tick.set_font(poppins_light)\n    tick.set_fontsize(10)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nAverage administrative rent by heating type"
  },
  {
    "objectID": "index.html#amenities-analysis",
    "href": "index.html#amenities-analysis",
    "title": "Executive Summary",
    "section": "Amenities Analysis",
    "text": "Amenities Analysis\n\nEquipment Correlation with Rent\nModern Amenities show stronger links to premium pricing than basic features. This analysis reveals which amenities correlate most strongly with higher rental prices.\n\n\nAnalyze equipment impact on rent pricing\ndef parse_equipment_safe(x):\n    try:\n        return ast.literal_eval(x) if isinstance(x, str) else []\n    except (ValueError, SyntaxError):\n        return []\n\ndf_eq = df.dropna(subset=[\"Wyposażenie\", \"Czynsz administracyjny\"]).copy()\ndf_eq[\"Wyposażenie\"] = df_eq[\"Wyposażenie\"].apply(parse_equipment_safe)\n\n# Create one-hot encoding for equipment\neq_dummies = df_eq[\"Wyposażenie\"].apply(pd.Series).stack().reset_index(level=1, drop=True).to_frame(\"item\")\neq_dummies[\"present\"] = 1\ndf_eq = df_eq.drop(\"Wyposażenie\", axis=1).join(eq_dummies)\n\ndf_eq = df_eq.pivot_table(index=df_eq.index, columns=\"item\", values=\"present\", fill_value=0).join(df_eq[\"Czynsz najmu\"])\n\ncorrelation = df_eq.corr(numeric_only=True)[\"Czynsz najmu\"].drop(\"Czynsz najmu\").sort_values(ascending=False)\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\nheatmap = sns.heatmap(\n    correlation.to_frame(),\n    annot=True,\n    cmap=cmap_x85,\n    vmin=correlation.min(),\n    vmax=correlation.max(),\n    cbar_kws={'label': 'Correlation with Rent'},\n    fmt='.3f',\n    annot_kws={'fontsize': 10, 'font': poppins_light},\n)\n\nfig_text(\n    x=0.15, y=1,\n    s=\"&lt;Modern Amenities&gt; Show &lt;Stronger Link&gt; \\nto Premium Pricing Than &lt;Basic Features&gt;\", \n    fontsize=26, font=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap_x85(7), \"font\": poppins_bold},\n        {\"color\": cmap(4), \"font\": poppins_bold},\n        {\"color\": cmap_x85(1), \"font\": poppins_bold},\n    ]\n)\n\nax.set_xlabel(\"\", fontsize=12, font=poppins_light)\n\nfor tick in ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_xticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\ncbar = heatmap.collections[0].colorbar\ncbar.ax.set_ylabel('Correlation with Rent', font=poppins_light, fontsize=12)\n\nfor tick in cbar.ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor spine in ax.spines.values():\n    spine.set_visible(False)\n\nfig.subplots_adjust(left=0.3)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nCorrelation between equipment amenities and rental prices\n\n\n\n\n\n\nEquipment Prevalence\nBasic Appliances dominate listings, Premium Features rare. This analysis shows the distribution of amenities across all listings.\n\n\nShow distribution of amenities\ntop_items = df_eq.drop(columns=\"Czynsz najmu\").sum().sort_values(ascending=False)\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\nbars = ax.bar(\n    range(len(top_items)), \n    top_items.values,\n    color=[cmap_x85(i/len(top_items)) for i in range(len(top_items))]\n)\n\nfig_text(\n    x=0.07, y=1, \n    s=\"&lt;Basic Appliances&gt; Dominate Listings, &lt;Premium Features&gt; Rare\", \n    fontsize=22, fontproperties=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap_x85(1), \"font\": poppins_bold},\n        {\"color\": cmap_x85(8), \"font\": poppins_bold},\n    ]\n)\n\nax.set_xticks(range(len(top_items)))\nax.set_xticklabels(top_items.index, rotation=45, ha='right')\n\nfor tick in ax.get_xticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nax.spines[[\"top\", \"right\"]].set_visible(False)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nPrevalence of different amenities across listings"
  },
  {
    "objectID": "index.html#security-analysis",
    "href": "index.html#security-analysis",
    "title": "Executive Summary",
    "section": "Security Analysis",
    "text": "Security Analysis\n\nSecurity Features Impact\nSecurity Features show minimal impact on rental prices despite their growing prevalence in the market.\n\n\nAnalyze security feature impact\ndef parse_security_flex(x):\n    if isinstance(x, str):\n        try:\n            parsed = ast.literal_eval(x)\n            if isinstance(parsed, list):\n                return parsed\n            else:\n                return [parsed]  \n        except:\n            return [x] \n    elif isinstance(x, list):\n        return x\n    else:\n        return []\n\ndf_sec = df.dropna(subset=[\"Bezpieczeństwo\", \"Czynsz najmu\"]).copy()\ndf_sec[\"Bezpieczeństwo\"] = df_sec[\"Bezpieczeństwo\"].apply(parse_security_flex)\n\n# One-hot encoding for security features\nsec_dummies = df_sec[\"Bezpieczeństwo\"].apply(pd.Series).stack().reset_index(level=1, drop=True).to_frame(\"item\")\nsec_dummies[\"present\"] = 1\ndf_sec = df_sec.drop(\"Bezpieczeństwo\", axis=1).join(sec_dummies)\n\ndf_sec = df_sec.pivot_table(index=df_sec.index, columns=\"item\", values=\"present\", fill_value=0).join(df_sec[\"Czynsz najmu\"])\n\ncorrelation = df_sec.corr(numeric_only=True)[\"Czynsz najmu\"].drop(\"Czynsz najmu\").sort_values(ascending=False)\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nheatmap = sns.heatmap(\n    correlation.to_frame(),\n    annot=True,\n    cmap=cmap,\n    vmin=correlation.min(),\n    vmax=correlation.max(),\n    cbar_kws={'label': 'Correlation with Rent'},\n    fmt='.3f',\n    annot_kws={'fontsize': 10, 'font': poppins_light}\n)\n\nfig_text(\n    x=0.08, y=1.05, \n    s=\"Security Features Show \\n&lt;Minimal Impact&gt; on Rental Prices\", \n    fontsize=28, fontproperties=poppins_light,\n    highlight_textprops=[{\"color\": cmap(5), \"font\": poppins_bold}]\n)\n\nax.set_xlabel(\"\", fontsize=12, fontproperties=poppins_light)\n\nfor tick in ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_xticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\ncbar = heatmap.collections[0].colorbar\ncbar.ax.set_ylabel('Correlation with Rent', fontproperties=poppins_light, fontsize=12)\n\nfor tick in cbar.ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor spine in ax.spines.values():\n    spine.set_visible(False)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nCorrelation between security features and rental prices\n\n\n\n\n\n\nSecurity vs. Non-Security Rent Comparison\nDespite weak correlation, secured properties command higher rents when comparing median values.\n\n\nCompare rent levels for secured vs non-secured properties\ndef is_secured(f):\n    try:\n        if isinstance(f, str):\n            f = ast.literal_eval(f)\n        if isinstance(f, list):\n            return int(any(\"monitoring\" in x.lower() or \"teren zamknięty\" in x.lower() for x in f if isinstance(x, str)))\n    except:\n        return 0\n    return 0\n\ndf[\"czy_strzezone\"] = df[\"Bezpieczeństwo\"].apply(is_secured)\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nbox_colors = [cmap(1), cmap(5)]\nboxplot = ax.boxplot(\n    [df[df[\"czy_strzezone\"] == 0][\"Czynsz najmu\"].dropna(),\n     df[df[\"czy_strzezone\"] == 1][\"Czynsz najmu\"].dropna()],\n    patch_artist=True,\n    tick_labels=[\"Not Secured\", \"Secured\"]\n)\n\nfor patch, color in zip(boxplot['boxes'], box_colors):\n    patch.set_facecolor(color)\n    patch.set_alpha(0.9)\n\nfig_text(\n    x=0.1, y=1, \n    s=\"&lt;Secured Properties&gt; \\nCommand &lt;Higher Rents&gt; Despite Weak Correlation\", \n    fontsize=23, fontproperties=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(5), \"font\": poppins_bold},\n        {\"color\": cmap(5), \"font\": poppins_bold},\n    ]\n)\n\nax.set_ylabel(\"Monthly Rent (PLN)\", fontsize=12, font=poppins_light)\n\nfor tick in ax.get_xticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nax.spines[[\"top\", \"right\"]].set_visible(False)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nRent distribution: secured vs. non-secured properties\n\n\n\n\n\n\nSecurity Feature Market Penetration\nSecurity Features becoming standard - Nearly half of all listings now include security features.\n\n\nShow prevalence of security features\ndef has_security(x):\n    if isinstance(x, str):\n        return int(\"monitoring\" in x.lower() or \"teren zamknięty\" in x.lower())\n    if isinstance(x, list):\n        return int(any(\"monitoring\" in i.lower() or \"teren zamknięty\" in i.lower() for i in x if isinstance(i, str)))\n    return 0\n\ndf[\"czy_strzezone\"] = df[\"Bezpieczeństwo\"].apply(has_security)\ncounts = df[\"czy_strzezone\"].value_counts().rename(index={1: \"Secured\", 0: \"Not secured\"})\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\nbar_colors = [cmap(5), cmap(1)]\nbars = ax.bar(counts.index, counts.values, color=bar_colors, alpha=0.9, width=0.6)\n\n# Add value labels on bars\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2., height + height*0.01,\n            f'{int(height):,}', ha='center', va='bottom', \n            fontproperties=poppins_light, fontsize=10)\n\nfig_text(\n    x=0.1, y=1.1, \n    s=\"&lt;Security Features Becoming Standard&gt; \\nIn Rental Market &lt;Nearly half&gt; of listings is &lt;secured&gt;\", \n    fontsize=28, fontproperties=poppins_light,\n    highlight_textprops=[\n        {\"color\": cmap(5), \"font\": poppins_bold},\n        {\"color\": cmap(1), \"font\": poppins_bold},\n        {\"color\": cmap(1), \"font\": poppins_bold},\n    ]\n)\n\nfor tick in ax.get_xticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nfor tick in ax.get_yticklabels():\n    tick.set_fontproperties(poppins_light)\n    tick.set_fontsize(10)\n\nax.spines[[\"top\", \"right\", \"left\"]].set_visible(False)\nax.get_yaxis().set_visible(False)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\nMarket penetration of security features"
  },
  {
    "objectID": "index.html#key-findings-investment-recommendations",
    "href": "index.html#key-findings-investment-recommendations",
    "title": "Executive Summary",
    "section": "Key Findings & Investment Recommendations",
    "text": "Key Findings & Investment Recommendations\n\nMarket Summary\nBased on this comprehensive analysis of Poznań’s rental market, several key insights emerge:\nMarket Structure:\n\nCompact living dominates: 53% of properties are 2-room apartments averaging 40-50 m²\nProfessional market: Agencies vastly outnumber private landlords\nPrice concentration: Most rents fall in the 2,000-3,000 PLN range\n\nGeographic Patterns:\n\nStare Miasto commands premium prices but holds 29% market share\nGrunwald offers largest apartments with highest deposits\nClear market segmentation by district with distinct pricing tiers\n\nInvestment Opportunities:\n\nPremium segment underexplored: Limited supply of 80+ m² properties\nModern amenities matter: Dishwashers and AC show strongest rent correlation\nSecurity features standard: Nearly half of listings include security, becoming baseline expectation\n\nCost Drivers:\n\nHeating infrastructure significantly impacts administrative costs\nContemporary buildings dominate the rental stock\nFloor level has minimal impact on pricing\n\nThis analysis positions Poznań as a stable, efficient rental market with clear opportunities for strategic investment in underserved premium segments while maintaining strong fundamentals in the core compact living sector."
  }
]